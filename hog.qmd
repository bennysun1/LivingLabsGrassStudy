---
title: "HOGs"
editor_options: 
  chunk_output_type: inline
---

## Historgram of Gradients

```{r}
library(mapsapi)
library(mapboxapi)
library(magick)
```

```{r}
key = "pk.eyJ1IjoiYmVubnlzdW4xIiwiYSI6ImNsczNuYTg2bjB6MWIybG11eWFsZWJrNjUifQ.8qFLlzNMxjmtULH1-NK3Nw"
# mapboxapi::mb_access_token("pk.eyJ1IjoiYmVubnlzdW4xIiwiYSI6ImNsczNuYTg2bjB6MWIybG11eWFsZWJrNjUifQ.8qFLlzNMxjmtULH1-NK3Nw", install = TRUE)
```

## San Francisco, CA

```{r}
# points_of_interest <- tibble::tibble(
#   longitude = c(-122.527972, -122.526361, -122.384423, -122.355432),
#   latitude = c(37.797679, 37.717774, 37.810405, 37.711881)
#   )
# 
# prepped_pois <- prep_overlay_markers(
#   data = points_of_interest,
#   marker_type = "pin-l",
#   label = 1:4,
#   color = "#fff", 
# )

map <- static_mapbox(
  style_url = "mapbox://styles/mapbox/satellite-v9",
  #username = "kwalkertcu",
  #overlay_markers = prepped_pois, 
  width = 300,
  height = 200, 
  image = T, latitude = 37.792004, longitude = -122.428079, zoom = 12
)


map

magick::image_write(map, "san_francisco_scale_zoom_12.png")
```

## Salt Lake City, UT

```{r}
points_of_interest <- tibble::tibble(
  longitude = c(-112.065945, -111.853948, -111.852956, -112.023371),
  latitude = c(40.794275, 40.791516, 40.502308, 40.502308)
  )

prepped_pois <- prep_overlay_markers(
  data = points_of_interest,
  marker_type = "pin-l",
  label = 1:4,
  color = "#fff", 
)

map <- static_mapbox(
  style_url = "mapbox://styles/mapbox/satellite-v9",
  #username = "kwalkertcu",
  #overlay_markers = prepped_pois, 
  width = 800,
  height = 1200, 
  image = T, 
  latitude = 40.7,
  longitude = -111.876183, zoom = 12
)


map

magick::image_write(map, "salt_lake_city_zoom_12.png")
```

## Detroit, MI

```{r}
# points_of_interest <- tibble::tibble(
#   longitude = c(-112.065945, -111.853948, -111.852956, -112.023371),
#   latitude = c(40.794275, 40.791516, 40.502308, 40.502308)
#   )
# 
# prepped_pois <- prep_overlay_markers(
#   data = points_of_interest,
#   marker_type = "pin-l",
#   label = 1:4,
#   color = "#fff", 
# )

map <- static_mapbox(
  style_url = "mapbox://styles/mapbox/satellite-v9",
  #username = "kwalkertcu",
  #overlay_markers = prepped_pois, 
  width = 1200,
  height = 800, 
  image = T, 
  latitude = 42.336322,
  longitude = -83.048705, zoom = 12
)


map

magick::image_write(map, "detroit_zoom_12.png")
```

## HOG SF

```{r}
# library(OpenImageR)
# #path = system.file("~/repos/LivingLabsGrassStudy/san_francisco_zoom_12.png", "1.png", package = "OpenImageR")
# image = rgb_2gray(readImage("~/repos/LivingLabsGrassStudy/color_example.jpg"))
# image=image*255 # Convert to gray values
# hog = HOG(image, cells = 9, orientations = 4)
# 
# 
# plot(hog, main = "Histogram of Oriented Gradients (HOG) from Image")
# 
# hist(hog)
```

```{r}
# image = readImage("~/repos/LivingLabsGrassStudy/grid.png")
# image=image*255 # Convert to gray values
# hog = HOG(image[,,-4], cells = 2, orientations = 4)
# 
# dim(image)
# 
# plot(hog, main = "Histogram of Oriented Gradients (HOG) from Image")
# 
# hist(hog)
```

```{r}
# image = readImage("~/repos/LivingLabsGrassStudy/color_example.jpg")
# #image=image*255 # Convert to gray values
# hog = HOG(image, cells = 8)
# 
# dim(image)
# 
# plot(hog, main = "Histogram of Oriented Gradients (HOG) from Image")
# 
# hist(hog)
```

```{r}
# library(image.dlib)
# library(magick)
# image <- magick::image_read("~/repos/LivingLabsGrassStudy/color_example.jpg")
# #image <- readImage("~/repos/LivingLabsGrassStudy/color_example.jpg")
# #image=image*255 # Convert to gray values
# 
# feats <- image_data(image, channels = "rgb")
# feats <- as.integer(feats, transpose = FALSE)
# feats <- image_fhog(feats, cell_size = 8)
# str(feats)
# 
# hist(feats$fhog)
# 
# feats$fhog[1, 1, ]
# image.dlib::image_fhog(image, cell_size = 8, filter_rows_padding = 1, filter_cols_padding = 1)
```

```{r}
# reticulate::py_install("matplotlib")
# reticulate::py_install("scikit-image")
```

```{python}
# curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py
# python get-pip.py
# 
# !pip install matplotlib
# !pip install scikit-image
# 
# # Install matplotlib
# 
# 
# import matplotlib.pyplot as plt
# #%matplotlib inline
# 
# from skimage.io import imread, imshow
# from skimage.transform import resize
# from skimage.feature import hog
# from skimage import data, exposure
```

```{python}
image = imread('color_example.jpg')
imshow(image)
print(image.shape)

resized_image = resize(image, (100,150))
imshow(resized_image)
print(resized_image.shape)


fig, hog_image = hog(resized_image, orientations=9, pixels_per_cell=(8, 8), 
                     feature_vector = True,
                    cells_per_block=(2, 2), visualize=True, channel_axis=2 #multichannel=True
)

import math

hog_gradient_angle = []

for r in range(1, 99):
    for c in range(1, 149):
        gx = hog_image[r,c+1] - hog_image[r,c-1]
        gy = hog_image[r+1,c] - hog_image[r-1,c]
        
        if gx == 0:
            if gy == 0:
                continue
            else:
                angle = math.pi / 2
        else:
            angle = math.atan(gy/gx)
        
        hog_gradient_angle.append(angle)

#print(hog_gradient_mag)
plt.hist(hog_gradient_angle) 
plt.title("histogram") 
plt.show()
```

```{r}
virtualenv_list()
py_install(c("scikit-image", "matplotlib"))

library(reticulate)
conda_list()
use_miniconda("/Users/bensunshine/Library/r-miniconda-arm64/envs/r-reticulate/bin/python")
use_condaenv("~/anaconda3/bin")

use_python("~/.virtualenvs/r-reticulate/bin/python")
use_python("/usr/local/bin/python3.11", required = TRUE)

use_python("~/.virtualenvs/r-reticulate/bin/python")

#use_python("/Users/bensunshine/anaconda3/envs/livingLabsGrassStudy/bin/python")

#/Users/bensunshine/Library/r-miniconda-arm64/envs/r-reticulate
```

```{r}
library(reticulate)

# indicate that we want to use a specific virtualenv
virtualenv_list()
use_virtualenv("r-reticulate", required = T)
virtualenv_install("r-reticulate", "skimage")

#sys <- import("sys")
#skimage_io <- import("skimage.io")
scikit_img <- import("scikit-image")
skimage <- import("skimage.io", convert=FALSE)

py_list_packages()
use_python("r-reticulate")
py_install("scikit-image")
py_run_string("from skimage.io import imread, imshow")

reticulate::py_last_error()
```

```{r}
library(reticulate)

virtualenv_create(
  envname  = "torch",
  python   = "/usr/local/bin/python3.8",
  packages = c("numpy", "torch"),
  system_site_packages = FALSE
)

use_virtualenv("torch", required = TRUE)
py_config()

torch <- import("torch")
```

```{r}
py_config()
```

```{python}
from skimage.io import imread, imshow

```

```{python}
import sys

from skimage.io import imread, imshow
from skimage.transform import resize
from skimage.feature import hog
from skimage import data, exposure
```
